@page
@model IndexModel
@{
    ViewData["Title"] = "Coin Classification";
}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.css">
    <script src="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.js"></script>
</head>
<body>
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-12 col-sm-12 col-md-8 col-lg-6">
                <div class="text-center mb-4">
                    <h1 class="display-4">@ViewData["Title"]</h1>
                </div>

                <div class="card shadow-lg p-4">
                    <form id="uploadForm" method="post" enctype="multipart/form-data">
                        <div class="mb-3">
                            <input type="file" class="form-control" id="ImageFile" name="ImageFile" accept="image/*" />
                        </div>
                        <div id="imageContainer" class="mb-3" style="display: none;">
                        </div>
                        <button type="button" id="cropButton" class="btn btn-danger mb-3 w-100" style="display: none;">Crop Image</button>
                        <div>
                            <div class="d-flex justify-content-center align-items-center">
                                <img id="imagePreview" src="" alt="Image Preview" class="img-fluid mb-3" style="height: 256px; display: none;">
                            </div>
                        </div>
                        <input type="hidden" id="croppedImageData" name="CroppedImageData" />
                        <button type="submit" class="btn btn-success w-100" id="submitBtn">Classify The Coin</button>
                    </form>
                </div>

                <div id="result" class="mt-4" style="display: none;">
                    <h2 class="h4">Processed Results:</h2>
                    <div class="alert alert-info">
                        <pre id="responseData"></pre>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        let cropper;
        const imagePreview = document.getElementById('imagePreview');
        const imageFileInput = document.getElementById('ImageFile');
        const cropButton = document.getElementById('cropButton');
        const imageContainer = document.getElementById('imageContainer');
        const croppedImageDataInput = document.getElementById('croppedImageData');
        const submitBtn = document.getElementById('submitBtn');
        const resultSection = document.getElementById('result');
        const responseData = document.getElementById('responseData');

        imageFileInput.addEventListener('change', function(event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    imagePreview.src = e.target.result;
                    imagePreview.style.display = 'block';
                    imageContainer.style.display = 'none';

                    croppedImageDataInput.value = e.target.result;

                    if (cropper) {
                        cropper.destroy();
                    }

                    imageContainer.innerHTML = '<img src="' + e.target.result + '" id="imageToCrop" class="img-fluid">';
                    const imageToCrop = document.getElementById('imageToCrop');
                    cropper = new Cropper(imageToCrop, {
                        aspectRatio: 1,
                        viewMode: 1,
                        minWidth: 256,
                        minHeight: 256,
                        maxWidth: 4096,
                        maxHeight: 4096,
                        fillColor: '#000',
                        imageSmoothingEnabled: true,
                        imageSmoothingQuality: 'high'
                    });
                    imageContainer.style.display = 'block';
                    cropButton.style.display = 'inline-block';
                };
                reader.readAsDataURL(file);
            }
        });

        cropButton.addEventListener('click', function() {
            if (cropper) {
                const canvas = cropper.getCroppedCanvas();
                const croppedImageDataUrl = canvas.toDataURL();

                croppedImageDataInput.value = croppedImageDataUrl;
                imagePreview.src = croppedImageDataUrl;
                imagePreview.classList.add('d-block');
            }
        });


        document.getElementById('uploadForm').addEventListener('submit', function(e) {
            e.preventDefault();

            const formData = new FormData(this);


            submitBtn.disabled = true;
            submitBtn.textContent = 'Processing...';


            $.ajax({
                url: '@Url.Page("Index")',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    console.log(response);

                    submitBtn.disabled = false;
                    submitBtn.textContent = 'Classify The Coin';

                    resultSection.style.display = 'block';

                    if (response.jsonResponse) {
                        try {
                            const parsedResponse = JSON.parse(response.jsonResponse);

                            responseData.textContent = JSON.stringify(parsedResponse, null, 2);
                        } catch (e) {
                            responseData.textContent = 'Error parsing JSON response';
                        }
                    } else {
                        responseData.textContent = 'No response data available';
                    }
                },
                error: function(xhr, status, error) {
                    submitBtn.disabled = false;
                    submitBtn.textContent = 'Classify The Coin';

                    resultSection.style.display = 'block';
                    responseData.textContent = `Error: ${xhr.responseText || status || error}`;
                }
            });
        });
    </script>

    <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
